{
  "x-generator": "NSwag v13.1.3.0 (NJsonSchema v10.0.27.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My API",
    "description": "API functionalities.",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/Search": {
      "post": {
        "tags": [
          "Status"
        ],
        "summary": "Create a search request.",
        "operationId": "InvoiceSearch_Post",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "*/*"
              ]
            }
          },
          {
            "name": "ProducerId",
            "in": "header",
            "required": true,
            "description": "The Id of the producer submitting the request.  The ProducerId in the header must match the ProducerId passed in the original request body.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Provider",
            "in": "header",
            "required": true,
            "description": "The access token provided by your service provider.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user submitting the request.  This value is used for reporting purposes only.  Usernames are defined by the caller.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "x-name": "model",
          "description": "The PostSearchRequest.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostSearchRequest"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "The request was successful. See the response body for details."
          },
          "400": {
            "description": "The request was incorrectly formatted of missing required headers or parameters.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The request was incorrectly formatted of missing required headers or parameters.",
                  "ModelState": null
                }
              }
            }
          },
          "401": {
            "description": "The provider key is not authorized.",
            "content": {
              "application/json": {
                "example": {
                  "StatusCode": 401,
                  "Message": "The provider key is not authorized."
                }
              }
            }
          },
          "403": {
            "description": "The requestor is not authorized to view the response.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The requestor is not authorized to view the response."
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "Something went wrong."
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "192.175.0.1"
          }
        ]
      }
    },
    "/api/v1/Invoice": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Gets the invoice status.",
        "operationId": "InvoiceStatus_Get",
        "parameters": [
          {
            "name": "PayorOrgId",
            "in": "query",
            "description": "Gets or sets an id of the payor org.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PayorOrgEbillingId",
            "in": "query",
            "description": "Gets or sets an id of the ebilling payor org.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SubmissionId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets an array of submission request ids.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets an array of producer invoice ids.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "MatterId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets an array of matter ids.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Gets or sets a start date edge after which the invoice was submitted.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Gets or sets an end date edge before which the invoice was submitted.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "Gets or sets a value whether the result selection will contain only invoices in active state.",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "*/*"
              ]
            }
          },
          {
            "name": "ProducerId",
            "in": "header",
            "required": true,
            "description": "The Id of the producer submitting the request.  The ProducerId in the header must match the ProducerId passed in the original request body.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Provider",
            "in": "header",
            "required": true,
            "description": "The access token provided by your service provider.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user submitting the request.  This value is used for reporting purposes only.  Usernames are defined by the caller.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful. See the response body for details."
          },
          "400": {
            "description": "The request was incorrectly formatted of missing required headers or parameters.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The request was incorrectly formatted of missing required headers or parameters.",
                  "ModelState": null
                }
              }
            }
          },
          "401": {
            "description": "The provider key is not authorized.",
            "content": {
              "application/json": {
                "example": {
                  "StatusCode": 401,
                  "Message": "The provider key is not authorized."
                }
              }
            }
          },
          "403": {
            "description": "The requestor is not authorized to view the response.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The requestor is not authorized to view the response."
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "Something went wrong."
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "192.175.0.1"
          }
        ]
      },
      "put": {
        "tags": [
          "Status"
        ],
        "summary": "Updates the status.",
        "operationId": "InvoiceStatus_Update",
        "parameters": [
          {
            "name": "SubmissionId",
            "in": "query",
            "description": "Gets or sets the submission Id.",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "description": "Gets or sets the invoice Id.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PayorOrgId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets billing organization’s assigned payor organization identifiers.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "PayorOrgEbillingId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets billing organization’s assigned payor organization identifiers.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "*/*"
              ]
            }
          },
          {
            "name": "ProducerId",
            "in": "header",
            "required": true,
            "description": "The Id of the producer submitting the request.  The ProducerId in the header must match the ProducerId passed in the original request body.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Provider",
            "in": "header",
            "required": true,
            "description": "The access token provided by your service provider.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user submitting the request.  This value is used for reporting purposes only.  Usernames are defined by the caller.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "x-name": "statusData",
          "description": "The UpdateStatusDetailsRequest.",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateStatusDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "The request was successful. See the response body for details."
          },
          "400": {
            "description": "The request was incorrectly formatted of missing required headers or parameters.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The request was incorrectly formatted of missing required headers or parameters.",
                  "ModelState": null
                }
              }
            }
          },
          "401": {
            "description": "The provider key is not authorized.",
            "content": {
              "application/json": {
                "example": {
                  "StatusCode": 401,
                  "Message": "The provider key is not authorized."
                }
              }
            }
          },
          "403": {
            "description": "The requestor is not authorized to view the response.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The requestor is not authorized to view the response."
                }
              }
            }
          },
          "404": {
            "description": "The requested resource could not be found.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The requestor is not authorized to view the response."
                }
              }
            }
          },
          "409": {
            "description": "The request could not be processed because of conflict in the current state of the resource.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The request could not be processed because of conflict in the current state of the resource."
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "Something went wrong."
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "192.175.0.1"
          }
        ]
      }
    },
    "/api/v1/Details": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Gets the invoice status details.",
        "operationId": "InvoiceStatusDetails_Get",
        "parameters": [
          {
            "name": "InvoiceId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets the invoice identifier.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "application/xml",
                "*/*"
              ]
            }
          },
          {
            "name": "ProducerId",
            "in": "header",
            "required": true,
            "description": "The Id of the producer submitting the request.  The ProducerId in the header must match the ProducerId passed in the original request body.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Provider",
            "in": "header",
            "required": true,
            "description": "The access token provided by your service provider.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user submitting the request.  This value is used for reporting purposes only.  Usernames are defined by the caller.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful. See the response body for details."
          },
          "400": {
            "description": "The request was incorrectly formatted of missing required headers or parameters.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The request was incorrectly formatted of missing required headers or parameters.",
                  "ModelState": null
                }
              }
            }
          },
          "401": {
            "description": "The provider key is not authorized.",
            "content": {
              "application/json": {
                "example": {
                  "StatusCode": 401,
                  "Message": "The provider key is not authorized."
                }
              }
            }
          },
          "403": {
            "description": "The requestor is not authorized to view the response.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The requestor is not authorized to view the response."
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "Something went wrong."
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "192.175.0.1"
          }
        ]
      }
    },
    "/api/v1/History": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Gets the invoice status history.",
        "operationId": "InvoiceStatusHistory_Get",
        "parameters": [
          {
            "name": "SubmissionId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets the array of the submission Ids.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "format": "guid"
              }
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "style": "form",
            "description": "Gets or sets the array of the invoice Ids.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Specify certain media types which are acceptable for the response.",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "*/*"
              ]
            }
          },
          {
            "name": "ProducerId",
            "in": "header",
            "required": true,
            "description": "The Id of the producer submitting the request.  The ProducerId in the header must match the ProducerId passed in the original request body.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Provider",
            "in": "header",
            "required": true,
            "description": "The access token provided by your service provider.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user submitting the request.  This value is used for reporting purposes only.  Usernames are defined by the caller.",
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful. See the response body for details."
          },
          "400": {
            "description": "The request was incorrectly formatted of missing required headers or parameters.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The request was incorrectly formatted of missing required headers or parameters.",
                  "ModelState": null
                }
              }
            }
          },
          "401": {
            "description": "The provider key is not authorized.",
            "content": {
              "application/json": {
                "example": {
                  "StatusCode": 401,
                  "Message": "The provider key is not authorized."
                }
              }
            }
          },
          "403": {
            "description": "The requestor is not authorized to view the response.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The requestor is not authorized to view the response."
                }
              }
            }
          },
          "404": {
            "description": "The requested resource could not be found.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "The requestor is not authorized to view the response."
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong.",
            "content": {
              "application/json": {
                "example": {
                  "Message": "Something went wrong."
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "192.175.0.1"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PostSearchRequest": {
        "type": "object",
        "description": "The model to create a search request.",
        "additionalProperties": false,
        "properties": {
          "PayorOrgId": {
            "type": "string",
            "description": "Gets or sets an id of the payor org.",
            "nullable": true
          },
          "PayorOrgEbillingId": {
            "type": "integer",
            "description": "Gets or sets an id of the ebilling payor org.",
            "format": "int32",
            "nullable": true
          },
          "SubmissionId": {
            "type": "array",
            "description": "Gets or sets an array of submission request ids.",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "InvoiceId": {
            "type": "array",
            "description": "Gets or sets an array of producer invoice ids.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "MatterId": {
            "type": "array",
            "description": "Gets or sets an array of matter ids.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "StartDate": {
            "type": "string",
            "description": "Gets or sets a start date edge after which the invoice was submitted.",
            "format": "date-time",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "description": "Gets or sets an end date edge before which the invoice was submitted.",
            "format": "date-time",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "Gets or sets a value whether the result selection will contain only invoices in active state.",
            "nullable": true
          }
        }
      },
      "UpdateStatusDetailsRequest": {
        "type": "object",
        "description": "The update status details request.",
        "additionalProperties": false,
        "required": [
          "Status"
        ],
        "properties": {
          "Status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "minLength": 1
          },
          "Comment": {
            "type": "string",
            "description": "Gets or sets the comment.",
            "nullable": true
          }
        }
      }
    }
  }
}